@startuml
!include Style.puml

box addExpenditure()
participant ":MMM" as MMM MMM_COLOUR
participant "Command:AddCommand" as AddCommand COMMANDS_COLOUR
participant ":GeneralFunctions" as GeneralFunctions HELPER_COLOUR
participant ":AddCommandInputTest" as AddCommandInputTest HELPER_COLOUR
participant ":Expenditure" as Expenditure USERFINANCIAL_COLOUR
participant ":ExpenditureList" as ExpenditureList DATA_COLOUR
participant ":CreditCardList" as CreditCardList DATA_COLOUR
participant ":CreditCard" as CreditCard USERFINANCIAL_COLOUR
end box
hide footbox

MMM -> AddCommand: AddCommand.executeCommand()
activate AddCommand COMMANDS_COLOUR

AddCommand -> AddCommand: addExpenditure()
activate AddCommand COMMANDS_COLOUR

AddCommand -> GeneralFunctions: parseInputWithCommandFlag()
activate GeneralFunctions HELPER_COLOUR
GeneralFunctions --> AddCommand: paymentMethod, category, description, amount, time
deactivate GeneralFunctions


AddCommand -> AddCommand: testExpenditureParameters(paymentMethod, category, description, amount, time, creditCardList)
activate AddCommand COMMANDS_COLOUR
AddCommand -> AddCommandInputTest: testsPaymentMethod(), testExpenditureCategory(), testDescription(), testExpenditureAmount(), time,
activate AddCommandInputTest HELPER_COLOUR
AddCommandInputTest --> AddCommand
deactivate AddCommandInputTest
AddCommand --> AddCommand
deactivate AddCommand COMMANDS_COLOUR

opt paymentMethod == cash
AddCommand -> GeneralFunctions: capitalise(paymentMethod)
activate GeneralFunctions HELPER_COLOUR
GeneralFunctions --> AddCommand: Capitalised paymentMethod
deactivate GeneralFunctions
end
AddCommand -> GeneralFunctions: capitalise(category)
activate GeneralFunctions HELPER_COLOUR
GeneralFunctions --> AddCommand: Capitalised category
deactivate GeneralFunctions

AddCommand -> GeneralFunctions: formatFloat(amount)
activate GeneralFunctions HELPER_COLOUR
GeneralFunctions --> AddCommand: Amount rounded to 2dp
deactivate GeneralFunctions

create Expenditure
AddCommand -> Expenditure: new Expenditure(paymentMethod, category, description, amount, time)
activate Expenditure USERFINANCIAL_COLOUR
Expenditure --> AddCommand
deactivate Expenditure

AddCommand -> ExpenditureList: expenditureList.add(new Expenditure)
activate ExpenditureList DATA_COLOUR
ExpenditureList --> AddCommand
deactivate ExpenditureList

note left
Details of newly added expenditure
is printed out
end note

opt paymentMethod != cash

AddCommand -> AddCommand: AddCommand.updateCreditCardTotalExpenditure(paymentMethod, amountFloat)
activate AddCommand COMMANDS_COLOUR
AddCommand -> CreditCardList: creditCardList.get(cardName)
activate CreditCardList DATA_COLOUR
CreditCardList --> AddCommand
deactivate CreditCardList

AddCommand -> CreditCard: creditCard.addExpenditure(amount)
activate CreditCard USERFINANCIAL_COLOUR
CreditCard --> AddCommand: creditCard.getBalanceLeft()
deactivate CreditCard

AddCommand --> AddCommand
deactivate AddCommand

end


AddCommand --> AddCommand:
deactivate AddCommand
AddCommand --> MMM: finishedMessage
deactivate AddCommand
@enduml
